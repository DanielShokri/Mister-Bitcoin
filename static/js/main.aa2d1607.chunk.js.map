{"version":3,"sources":["components/AppHeader/AppHeader.js","components/Chart/Chart.js","services/StorageService.js","services/BitcoinService.js","pages/StatisticPage.js","services/UserService.js","store/actions/userActions.js","components/MovesList/MovesList.js","pages/HomePage.js","store/actions/bitcoinActions.js","services/ContactService.js","components/TransferFund/TransferFund.js","pages/ContactDetails.js","store/actions/contactsActions.js","pages/ContactEdit/ContactEditPage.js","pages/SignupPage.js","components/ContactPreview/ContactPreview.js","components/ContactList/ContactList.js","components/ContactFilter/ContactFilter.js","pages/ContactPage.js","App.js","serviceWorker.js","store/types.js","store/reducers/index.js","store/reducers/contactsReducer.js","store/reducers/bitcoinReducer.js","store/reducers/userReducer.js","index.js"],"names":["AppHeader","react_default","a","createElement","className","react_router_dom","to","activeClassName","href","Component","Chart","this","props","title","build","data","style","strokeWidth","stroke","color","fill","StorageService","save","key","val","JSON","stringify","localStorage","setItem","load","parse","getItem","BitcoinService","getRate","getMarketPrice","getConfirmedTransactions","_callee","coins","res","rate","_args","arguments","regenerator_default","wrap","_context","prev","next","length","undefined","axios","get","concat","sent","abrupt","stop","_callee2","_context2","values","map","value","y","console","log","_callee3","_context3","StatisticPage","state","marketPrice","transactions","setState","components_Chart_Chart","UserService","getUser","signUp","name","user","moves","addMove","toContact","amount","_loadFromLocal","unshift","toId","_id","at","Date","now","Promise","resolve","_makeId","txt","possible","i","charAt","Math","floor","random","fetchData","type","dispatch","userService","then","response","catch","error","onTransferCoins","MoveList","_this$props$trans","trans","dist_default","format","HomePage","_this2","btc","slice","currTran","index","MovesList","connect","userReducer","bitcoinReducer","ContactService","getContacts","filterBy","reject","term","contactsToReturn","contacts","toLocaleLowerCase","filter","contact","includes","phone","email","sort","b","getContactById","id","find","deleteContact","findIndex","splice","saveContact","c","_updateContact","_addContact","getEmptyContact","TransferFund","handleChange","ev","_ev$target","target","_this","Object","objectSpread","defineProperty","handleSubmit","preventDefault","M","toast","html","onSubmit","max","onChange","placeholder","ContactDetails","contactId","src","alt","components_TransferFund_TransferFund","fetchContactsData","ContactEdit","contactDetails","history","push","handleInputs","event","_event$target","match","params","onClick","contactsReducer","signupPage","onFormSubmit","onInputChange","ContactPreview","selectContact","contactSelected","ContactList","selectedContact","currContact","components_ContactPreview_ContactPreview","ContactFilter","onFilter","React","ContactPage","handleChangeTxt","addNewContact","components_ContactFilter_ContactFilter","margin","components_ContactList_ContactList","PrivateRoute","isAdmin","react_router","App","components_AppHeader_AppHeader","exact","path","component","SignupPage","App_PrivateRoute","render","_ref","pages_ContactDetails","Boolean","window","location","hostname","types","FETCH_CONTACTS","DELETE_CONTACT","GET_CONTACT_ID","SAVE_CONTACT","GET_BITCOIN_RATE","GET_USER","TRANSFER_COINS","combinedReducer","combineReducers","action","marketPriceData","confirmedTransactionsData","middleware","thunk","store","createStore","reducer","applyMiddleware","apply","ReactDOM","es","src_App_0","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.aa2d1607.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\nimport { NavLink } from \"react-router-dom\";\r\nimport './AppHeader.css';\r\n\r\nclass AppHeader extends Component {\r\n\r\n    render() {\r\n        return (\r\n            <header>\r\n                <div className=\"header\">\r\n                    <NavLink to=\"/\" className=\"logo\">Mister-Bitcoin</NavLink>\r\n                    <div className=\"header-right\">\r\n                        <NavLink activeClassName=\"active\" to=\"/\"  href=\"#\">Home</NavLink>\r\n                        <NavLink activeClassName=\"active\" to=\"/contact\">Contacts</NavLink>\r\n                        <NavLink activeClassName=\"active\" to=\"/statistics\">Statistics</NavLink>\r\n                    </div>\r\n                </div>\r\n            </header>\r\n        )\r\n    }\r\n}\r\n\r\nexport default AppHeader","import React, { Component } from 'react';\r\nimport { Sparklines, SparklinesLine } from 'react-sparklines';\r\n\r\nclass Chart extends Component {\r\n\r\n\r\n    render() { \r\n        return ( \r\n                    <section className={this.props.className}>\r\n                        <h3>{this.props.title}</h3>\r\n                        <Sparklines data={this.props.data}>\r\n                            <SparklinesLine style={{ strokeWidth: 3, stroke: this.props.color, fill: \"black\" }} />\r\n                        </Sparklines>\r\n                    </section>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Chart;","\r\nexport default {\r\n    save,\r\n    load\r\n}\r\n\r\n\r\nfunction save(key, val) {\r\n    val = JSON.stringify(val)\r\n    localStorage.setItem(key, val)\r\n}\r\n\r\nfunction load(key) {\r\n    return JSON.parse(localStorage.getItem(key));\r\n}","import axios from 'axios'\r\nimport StorageService from './StorageService'\r\n\r\nexport default {\r\n    getRate,\r\n    getMarketPrice,\r\n    getConfirmedTransactions\r\n}\r\n\r\nasync function getRate(coins = 100) {\r\n    const res = await axios.get(`https://blockchain.info/tobtc?currency=USD&value=${coins}`)\r\n    const rate = res.data\r\n    return rate\r\n}\r\n\r\nasync function getMarketPrice() {\r\n    let res = StorageService.load('priceRate')\r\n    if(res) return res;\r\n    res = await axios.get('https://api.blockchain.info/charts/market-price?timespan=5months&format=json&cors=true');\r\n    res = res.data.values.map(value => value.y);\r\n    console.log(res)\r\n    StorageService.save('priceRate', res);\r\n    return res;\r\n}\r\n\r\nasync function getConfirmedTransactions() {\r\n    let res = StorageService.load('transactions')\r\n    if(res) return res;\r\n    res = await axios.get(`https://api.blockchain.info/charts/n-transactions?timespan=50days&format=json&cors=true`)\r\n    res = res.data.values.map(value => value.y);\r\n    StorageService.save('transactions', res);\r\n    return res;\r\n}\r\n\r\n\r\n\r\n\r\n\r\n","import React, { Component } from 'react';\r\nimport Chart from '../components/Chart/Chart'\r\nimport BitcoinService from '../services/BitcoinService'\r\n\r\nclass StatisticPage extends Component {\r\n    state = { marketPrice: null, transactions: null }\r\n\r\n    async componentDidMount() {\r\n        const marketPrice = await BitcoinService.getMarketPrice();\r\n        const transactions = await BitcoinService.getConfirmedTransactions();\r\n\r\n        this.setState({ marketPrice, transactions });\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <h1>Statistic Page</h1>\r\n                <section className=\"statistic-page\">\r\n                    {this.state.transactions &&\r\n                    <Chart data={this.state.transactions}></Chart>\r\n                }\r\n                {this.state.marketPrice &&\r\n                    <Chart data={this.state.marketPrice}\r\n                    className=\"confirmed-transactions\"\r\n                     title=\"Confirmed transactions in the past 24 hours\"\r\n                     color={\"#49beb7\"}></Chart>}\r\n          \r\n          </section>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default StatisticPage;","import StorageService from './StorageService';\r\n\r\nexport default {\r\n    getUser,\r\n    signUp,\r\n    addMove\r\n}\r\n\r\n\r\nasync function getUser() {\r\n    let user = StorageService.load('user')\r\n\r\n    if (!user) {\r\n        user = {\r\n            _id: _makeId(),\r\n            name: 'Daniel',\r\n            coins: 100,\r\n            moves: []\r\n        }\r\n        StorageService.save('user', user)\r\n    }\r\n    return await user\r\n}\r\n\r\nfunction signUp(name) {\r\n    const user = { name, coins: 10000, moves: [] }\r\n    StorageService.save('user', user);\r\n\r\n    return user\r\n}\r\n\r\nfunction addMove(toContact, amount) {\r\n    const user = _loadFromLocal()\r\n    user.moves.unshift({\r\n        toId: toContact._id,\r\n        to: toContact.name,\r\n        amount: amount,\r\n        at: Date.now()\r\n    })\r\n    user.coins -= amount\r\n    StorageService.save('user', user);\r\n    return Promise.resolve(user)\r\n}\r\n\r\n\r\nfunction _loadFromLocal() {\r\n    const user = localStorage.getItem('user')\r\n    if (!user) return null\r\n\r\n    return JSON.parse(user)\r\n}\r\n\r\n\r\nfunction _makeId(length = 10) {\r\n    var txt = ''\r\n    var possible = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789'\r\n    for (var i = 0; i < length; i++) {\r\n        txt += possible.charAt(Math.floor(Math.random() * possible.length))\r\n    }\r\n    return txt\r\n}","import userService from '../../services/UserService';\r\n\r\nexport const fetchData = (data, type) => {\r\n    return {\r\n        type,\r\n        data\r\n    }\r\n};\r\n\r\n\r\nexport const getUser = (coins) => {\r\n    return (dispatch) => {\r\n        return userService.getUser()\r\n            .then(response => {\r\n                dispatch(fetchData(response, 'GET_USER'))\r\n            })\r\n            .catch(error => {\r\n                throw (error);\r\n            });\r\n    };\r\n};\r\n\r\nexport const onTransferCoins = (user, amount) => {\r\n    return (dispatch) => {\r\n        return userService.addMove(user, amount)\r\n            .then(response => {\r\n                dispatch(fetchData(response, 'TRANSFER_COINS'))\r\n            })\r\n            .catch(error => {\r\n                throw (error);\r\n            });\r\n    };\r\n};","import React, { Component } from 'react';\r\nimport Moment from 'react-moment';\r\n\r\n\r\nclass MoveList extends Component {\r\n\r\n\r\n    render() {\r\n        const { to, amount, at } = this.props.trans\r\n        return (\r\n            <div>\r\n                <div >\r\n                    To: {to}<br></br>\r\n                    At:  <Moment format=\"DD/MM/YYYY HH:mm\">{at}</Moment><br></br>\r\n                    Amount: {amount} Coins<br></br>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\n\r\n\r\nexport default MoveList;","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { fetchBitcoinData } from '../store/actions/bitcoinActions';\r\nimport { getUser } from '../store/actions/userActions'\r\nimport userReducer from '../store/reducers/userReducer';\r\nimport MoveList from '../components/MovesList/MovesList';\r\n\r\n// import BitcoinService from '../services/BitcoinService'\r\n\r\nclass HomePage extends Component {\r\n    state = { user: [] }\r\n\r\n    async  componentDidMount() {\r\n        const { dispatch } = this.props\r\n        dispatch(getUser())\r\n            .then(() => {\r\n                dispatch(fetchBitcoinData(this.props.user.coins))\r\n            })\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                {this.props.user.name && (\r\n                    <div>\r\n                        <section>\r\n                            <h1>Hello {this.props.user.name}!</h1>\r\n                            <div>Coins:{this.props.user.coins}</div>\r\n                            <div>BTC: {this.props.btc}</div>\r\n                        </section>\r\n                        <div>\r\n                            <h4>Last 3 Transactions</h4>\r\n                            {\r\n                                this.props.user.moves.slice(0, 3).map((currTran,index) => (\r\n                                    <MoveList key={index} trans={currTran}></MoveList>\r\n                                ))\r\n                            }\r\n                        </div>\r\n                    </div>\r\n                )}\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    const { user } = state.userReducer\r\n    const { btc } = state.bitcoinReducer\r\n    return {\r\n        user,\r\n        btc\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps)(HomePage);","import BitcoinService from '../../services/BitcoinService';\r\n\r\n\r\nexport const fetchData = (data, type) => {\r\n    return {\r\n        type,\r\n        data\r\n    }\r\n};\r\n\r\n\r\n\r\nexport const fetchBitcoinData = (coins) => {\r\n    return (dispatch) => {\r\n        return BitcoinService.getRate(coins)\r\n            .then(response => {\r\n                dispatch(fetchData(response, 'GET_BITCOIN_RATE'))\r\n            })\r\n            .catch(error => {\r\n                throw (error);\r\n            });\r\n    };\r\n};","export default {\n  getContacts,\n  getContactById,\n  deleteContact,\n  saveContact,\n  getEmptyContact\n}\n\n\n\nlet contacts = [\n  {\n    \"_id\": \"5a56640269f443a5d64b32ca\",\n    \"name\": \"Ochoa Hyde\",\n    \"email\": \"ochoahyde@renovize.com\",\n    \"phone\": \"+1 (968) 593-3824\"\n  },\n  {\n    \"_id\": \"5a5664025f6ae9aa24a99fde\",\n    \"name\": \"Hallie Mclean\",\n    \"email\": \"halliemclean@renovize.com\",\n    \"phone\": \"+1 (948) 464-2888\"\n  },\n  {\n    \"_id\": \"5a56640252d6acddd183d319\",\n    \"name\": \"Parsons Norris\",\n    \"email\": \"parsonsnorris@renovize.com\",\n    \"phone\": \"+1 (958) 502-3495\"\n  },\n  {\n    \"_id\": \"5a566402ed1cf349f0b47b4d\",\n    \"name\": \"Rachel Lowe\",\n    \"email\": \"rachellowe@renovize.com\",\n    \"phone\": \"+1 (911) 475-2312\"\n  },\n  {\n    \"_id\": \"5a566402abce24c6bfe4699d\",\n    \"name\": \"Dominique Soto\",\n    \"email\": \"dominiquesoto@renovize.com\",\n    \"phone\": \"+1 (807) 551-3258\"\n  },\n  {\n    \"_id\": \"5a566402a6499c1d4da9220a\",\n    \"name\": \"Shana Pope\",\n    \"email\": \"shanapope@renovize.com\",\n    \"phone\": \"+1 (970) 527-3082\"\n  },\n  {\n    \"_id\": \"5a566402f90ae30e97f990db\",\n    \"name\": \"Faulkner Flores\",\n    \"email\": \"faulknerflores@renovize.com\",\n    \"phone\": \"+1 (952) 501-2678\"\n  },\n  {\n    \"_id\": \"5a5664027bae84ef280ffbdf\",\n    \"name\": \"Holder Bean\",\n    \"email\": \"holderbean@renovize.com\",\n    \"phone\": \"+1 (989) 503-2663\"\n  },\n  {\n    \"_id\": \"5a566402e3b846c5f6aec652\",\n    \"name\": \"Rosanne Shelton\",\n    \"email\": \"rosanneshelton@renovize.com\",\n    \"phone\": \"+1 (968) 454-3851\"\n  },\n  {\n    \"_id\": \"5a56640272c7dcdf59c3d411\",\n    \"name\": \"Pamela Nolan\",\n    \"email\": \"pamelanolan@renovize.com\",\n    \"phone\": \"+1 (986) 545-2166\"\n  },\n  {\n    \"_id\": \"5a5664029a8dd82a6178b15f\",\n    \"name\": \"Roy Cantu\",\n    \"email\": \"roycantu@renovize.com\",\n    \"phone\": \"+1 (929) 571-2295\"\n  },\n  {\n    \"_id\": \"5a5664028c096d08eeb13a8a\",\n    \"name\": \"Ollie Christian\",\n    \"email\": \"olliechristian@renovize.com\",\n    \"phone\": \"+1 (977) 419-3550\"\n  },\n  {\n    \"_id\": \"5a5664026c53582bb9ebe9d1\",\n    \"name\": \"Nguyen Walls\",\n    \"email\": \"nguyenwalls@renovize.com\",\n    \"phone\": \"+1 (963) 471-3181\"\n  },\n  {\n    \"_id\": \"5a56640298ab77236845b82b\",\n\n    \"name\": \"Glenna Santana\",\n    \"email\": \"glennasantana@renovize.com\",\n    \"phone\": \"+1 (860) 467-2376\"\n  },\n  {\n    \"_id\": \"5a56640208fba3e8ecb97305\",\n    \"name\": \"Malone Clark\",\n    \"email\": \"maloneclark@renovize.com\",\n    \"phone\": \"+1 (818) 565-2557\"\n  },\n  {\n    \"_id\": \"5a566402abb3146207bc4ec5\",\n    \"name\": \"Floyd Rutledge\",\n    \"email\": \"floydrutledge@renovize.com\",\n    \"phone\": \"+1 (807) 597-3629\"\n  },\n  {\n    \"_id\": \"5a56640298500fead8cb1ee5\",\n    \"name\": \"Grace James\",\n    \"email\": \"gracejames@renovize.com\",\n    \"phone\": \"+1 (959) 525-2529\"\n  },\n  {\n    \"_id\": \"5a56640243427b8f8445231e\",\n    \"name\": \"Tanner Gates\",\n    \"email\": \"tannergates@renovize.com\",\n    \"phone\": \"+1 (978) 591-2291\"\n  },\n  {\n    \"_id\": \"5a5664025c3abdad6f5e098c\",\n    \"name\": \"Lilly Conner\",\n    \"email\": \"lillyconner@renovize.com\",\n    \"phone\": \"+1 (842) 587-3812\"\n  }\n];\n\nfunction sort(arr) {\n  return arr.sort((a, b) => {\n    if (a.name.toLocaleLowerCase() < b.name.toLocaleLowerCase()) {\n      return -1;\n    }\n    if (a.name.toLocaleLowerCase() > b.name.toLocaleLowerCase()) {\n      return 1;\n    }\n\n    return 0;\n  })\n}\n\nfunction getContacts(filterBy = null) {\n  return new Promise((resolve, reject) => {\n    var contactsToReturn = contacts;\n    if (filterBy && filterBy.term) {\n      contactsToReturn = filter(filterBy.term)\n    }\n    resolve(sort(contactsToReturn))\n  })\n}\n\nfunction getContactById(id) {\n  return new Promise((resolve, reject) => {\n    const contact = contacts.find(contact => contact._id === id)\n    contact ? resolve(contact) : reject(`Contact id ${id} not found!`)\n  })\n}\n\nfunction deleteContact(id) {\n  return new Promise((resolve, reject) => { \n    const index = contacts.findIndex( contact => contact._id === id)\n    if (index !== -1) {\n      contacts.splice(index, 1)\n    }\n\n    resolve(contacts)\n  })\n}\n\nfunction _updateContact(contact) {\n  return new Promise((resolve, reject) => {\n    const index = contacts.findIndex(c => contact._id === c._id)\n    if (index !== -1) {\n      contacts[index] = contact\n    }\n    resolve(contact)\n  })\n}\n\nfunction _addContact(contact) {\n  return new Promise((resolve, reject) => {\n    contact._id = _makeId()\n    contacts.unshift(contact)\n    resolve(contact)\n  })\n}\n\nfunction saveContact(contact) {\n  return contact._id ? _updateContact(contact) : _addContact(contact)\n}\n\nfunction getEmptyContact() {\n  return {\n    name: '',\n    email: '',\n    phone: ''\n  }\n}\n\nfunction filter(term) {\n  term = term.toLocaleLowerCase()\n  return contacts.filter(contact => {\n    return contact.name.toLocaleLowerCase().includes(term) ||\n      contact.phone.toLocaleLowerCase().includes(term) ||\n      contact.email.toLocaleLowerCase().includes(term)\n  })\n}\n\n\n\nfunction _makeId(length = 10) {\n  var txt = ''\n  var possible = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789'\n  for (var i = 0; i < length; i++) {\n    txt += possible.charAt(Math.floor(Math.random() * possible.length))\n  }\n  return txt\n}","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { onTransferCoins } from '../../store/actions/userActions';\r\nimport M from \"materialize-css\";\r\nimport './TransferFund.css'\r\n\r\n\r\nclass TransferFund extends Component {\r\n    state = { user: { amount: '' } }\r\n\r\n    handleChange = (ev) => {\r\n        let { name, value } = ev.target\r\n        this.setState({ user: { ...this.state.user, [name]: value } });\r\n    }\r\n\r\n    handleSubmit = async (ev) => {\r\n        ev.preventDefault();\r\n        this.props.dispatch(onTransferCoins(this.props.contact, this.state.user.amount))\r\n            .then(() => {\r\n                M.toast({ html: 'Transfer Successfully!'})\r\n            })\r\n    }\r\n\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <h5>Transfer to {this.props.contact.name}</h5>\r\n                <form onSubmit={this.handleSubmit} className=\"flex flex-row justify-center\">\r\n                    <input type=\"number\" max=\"100\" name=\"amount\" onChange={this.handleChange} placeholder='How much to transfer?' />\r\n                    <button>TRANSFER</button>\r\n                </form>\r\n            </div>\r\n        )\r\n    }\r\n}\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps)(TransferFund);","import React, { Component } from 'react';\r\nimport ContactService from '../services/ContactService'\r\nimport { Link } from \"react-router-dom\";\r\nimport TransferFund from \"../components/TransferFund/TransferFund\";\r\nimport MoveList from '../components/MovesList/MovesList'\r\nimport { connect } from 'react-redux';\r\nimport { getUser } from '../store/actions/userActions';\r\n\r\nclass ContactDetails extends Component {\r\n    state = { contact: null }\r\n\r\n    async componentDidMount() {\r\n        const contact = await ContactService.getContactById(this.props.contactId);\r\n        this.setState({ contact });\r\n\r\n        const { dispatch } = this.props\r\n        dispatch(getUser())\r\n    }\r\n\r\n    render() {\r\n        const { contact } = this.state;\r\n        return (\r\n            contact && (\r\n                <section className=\"contact-details\">\r\n                    <h1>{contact.name}</h1>\r\n                    <h2>{contact.email}</h2>\r\n                    <h3>{contact.phone}</h3>\r\n                    <img src={`https://robohash.org/${contact.name}.png`} alt=\"profile\" />\r\n                    <TransferFund contact={this.state.contact}></TransferFund>\r\n                    <h4>Transactions to {contact.name}</h4>\r\n                    {this.props.user.moves && (\r\n                        <div>\r\n                            {\r\n                                this.props.user.moves.map((currTran, index) => (\r\n                                    <MoveList key={index} trans={currTran} contact={this.state.contact}></MoveList>\r\n                                ))\r\n                            }\r\n                        </div>\r\n                    )\r\n\r\n                    }\r\n                    <Link to=\"/contact\">Back</Link>\r\n                </section>\r\n\r\n            )\r\n        )\r\n    }\r\n\r\n}\r\nconst mapStateToProps = (state) => {\r\n    const { user } = state.userReducer\r\n    return {\r\n        user,\r\n    }\r\n}\r\n\r\n\r\n\r\nexport default connect(mapStateToProps)(ContactDetails);\r\n","// import types from \"../types\";\r\nimport ContactService from \"../../services/ContactService\";\r\n\r\n\r\n\r\n\r\nexport const fetchData = (data, type) => {\r\n  return {\r\n    type,\r\n    data\r\n  }\r\n};\r\n\r\nexport const fetchContactsData = (filterBy = null) => {\r\n  return (dispatch) => {\r\n    return ContactService.getContacts(filterBy)\r\n      .then(response => {\r\n        dispatch(fetchData(response, 'FETCH_CONTACTS'))\r\n      })\r\n      .catch(error => {\r\n        throw (error);\r\n      });\r\n  };\r\n};\r\n\r\nexport const getContactById = (id) => {\r\n  return (dispatch) => {\r\n    if (id) {\r\n      return ContactService.getContactById(id)\r\n        .then(response => {\r\n          console.log(response)\r\n          dispatch(fetchData(response, 'GET_CONTACT_ID'))\r\n        })\r\n        .catch(error => {\r\n          throw (error);\r\n        });\r\n    } else {\r\n      dispatch(fetchData({\r\n        name: \"\",\r\n        phone: \"\",\r\n        email: \"\"\r\n      }, 'GET_CONTACT_ID'))\r\n    }\r\n  };\r\n};\r\n\r\nexport const saveContact = (contact) => {\r\n  return (dispatch) => {\r\n    return ContactService.saveContact(contact)\r\n      .then(response => {\r\n        dispatch(fetchData(response, 'SAVE_CONTACT'))\r\n      })\r\n      .catch(error => {\r\n        throw (error);\r\n      });\r\n  };\r\n};\r\n\r\n\r\nexport const deleteContact = (id) => {\r\n  return (dispatch) => {\r\n    return ContactService.deleteContact(id)\r\n      .then(response => {\r\n        dispatch(fetchData(response, 'DELETE_CONTACT'))\r\n      })\r\n      .catch(error => {\r\n        throw (error);\r\n      });\r\n  };\r\n};","import React, { Component } from 'react';\r\nimport { getContactById, saveContact } from '../../store/actions/contactsActions'\r\n\r\nimport './ContactEdit.css';\r\nimport { connect } from 'react-redux';\r\n\r\n\r\n\r\nclass ContactEdit extends Component {\r\n    state = { contactDetails: { name: \"\", phone: '', email: '' } }\r\n\r\n    async componentDidMount() {\r\n        if (this.props.match.params.id) {\r\n            this.props.dispatch(getContactById(this.props.match.params.id))\r\n                .then(() => {\r\n                    this.setState({ contactDetails: this.props.contactDetails })\r\n                })\r\n        }\r\n    }\r\n\r\n    saveContact = async () => {\r\n        if (!this.state.contactDetails.name || !this.state.contactDetails.email || !this.state.contactDetails.phone) return;\r\n        this.props.dispatch(saveContact(this.state.contactDetails))\r\n        const {history} = this.props;\r\n        history.push('/contact')\r\n    }\r\n\r\n    handleInputs = (event) => {\r\n        const { value, name } = event.target;\r\n        this.setState((state) => { return { contactDetails: { ...this.state.contactDetails, [name]: value } } })\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"edit-page\">\r\n                {!this.props.match.params.id && (\r\n                    < div >\r\n                        <h1>Add Contact</h1>\r\n                    </div>\r\n                )}\r\n                {this.props.match.params.id && (\r\n                    <div>\r\n                        <h1>Edit Contact</h1>\r\n                    </div>\r\n                )}\r\n\r\n                <span className=\"edit-text\">Name:</span> <input type=\"text\" onChange={this.handleInputs} value={this.state.contactDetails.name} name=\"name\" />\r\n                <span className=\"edit-text\">Phone:</span> <input type=\"text\" onChange={this.handleInputs} value={this.state.contactDetails.phone} name=\"phone\" />\r\n                <span className=\"edit-text\">E-mail:</span>  <input type=\"text\" onChange={this.handleInputs} value={this.state.contactDetails.email} name=\"email\" />\r\n                <button className=\"waves-effect waves-light btn-small\" onClick={this.saveContact}>Save</button>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        contactDetails: state.contactsReducer.contactDetails,\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps)(ContactEdit);","import React, { Component } from 'react';\r\n\r\n\r\nclass signupPage extends Component {\r\n    state = { name: '' }\r\n\r\n    // onInputChange = (event) => {\r\n    //     this.state.name = event.target.value\r\n    // }\r\n    \r\n    onFormSubmit(event) {\r\n        event.preventDefault();\r\n\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <form onSubmit={this.onFormSubmit} className=\"signup-form\">\r\n                    <div className=\"signup-title\">Please enter your name:</div>\r\n\r\n                    <input value={this.name} onChange={this.onInputChange} />\r\n\r\n                    <div className=\"actions-container\">\r\n                        <button type=\"submit\">Sign up</button>\r\n                    </div>\r\n                </form>\r\n            </div>\r\n        )\r\n    }\r\n\r\n}\r\n\r\nexport default signupPage;","import React, { Component } from 'react';\r\nimport './ContactPreview.css';\r\nimport { Link } from 'react-router-dom'\r\n// import M from 'materialize-css';\r\n\r\nclass ContactPreview extends Component {\r\n\r\n    selectContact = () => {\r\n        this.props.contactSelected(this.props.contact)\r\n    }\r\n\r\n    deleteContact = () => {\r\n        this.props.deleteContact(this.props.contact._id)\r\n    }\r\n\r\n    render() {\r\n        // console.log(this.props.contact)\r\n        return (\r\n            <div className=\"card\">\r\n                <div className=\"card-image waves-effect waves-block waves-light\">\r\n                    <img src={`https://robohash.org/${this.props.contact.name}.png`} alt=\"\" />\r\n\r\n                    <div className=\"card-content\">\r\n                        <span className=\"card-title  grey-text text-darken-4\">{this.props.contact.name}</span>\r\n                        <p><Link to={`/contact/${this.props.contact._id}`}>Contact Details</Link></p>\r\n                    </div>\r\n                    <div className=\"card-action\">\r\n                        <Link className=\"waves-effect waves-light btn-small\" to={`/contact/edit/${this.props.contact._id}`}>Edit</Link>\r\n                        <button className=\"waves-effect waves-light btn-small\" onClick={this.deleteContact} >Delete</button>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\n\r\nexport default ContactPreview;\r\n","import React, { Component } from 'react';\r\nimport ContactPreview from '../ContactPreview/ContactPreview'\r\nimport './ContactList.css';\r\n\r\n\r\nclass ContactList extends Component {\r\n    state = { selectedContact: null };\r\n\r\n    deleteContact = (contactId) => {\r\n        this.props.deleteContact(contactId)\r\n    }\r\n\r\n    render() {\r\n\r\n        const { contacts } = this.props;\r\n        return (\r\n            <div>\r\n                <section key={1} className=\"contacts-list\">\r\n                    {contacts.map((currContact) => (\r\n                        <ContactPreview deleteContact={this.deleteContact} contactSelected={this.props.contactSelected}\r\n                            key={currContact._id} contact={currContact}></ContactPreview>\r\n                    ))}\r\n                </section>\r\n\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\n\r\nexport default ContactList;\r\n","import React from 'react';\r\nimport './ContactFilter.css'\r\n\r\nclass ContactFilter extends React.Component {\r\n    \r\n    \r\n    handleChange = (event) => {\r\n        this.props.onFilter(event.target.value)\r\n      }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <input type=\"text\" className=\"search-box\" onChange={this.handleChange} placeholder=\"Search contact...\" />\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default ContactFilter;\r\n\r\n","import React, { Component } from 'react';\r\nimport ContactList from '../components/ContactList/ContactList';\r\nimport { connect } from 'react-redux';\r\nimport { fetchContactsData, deleteContact } from '../store/actions/contactsActions'\r\nimport ContactFilter from '../components/ContactFilter/ContactFilter';\r\n\r\n\r\nclass ContactPage extends Component {\r\n    state = { selectedContact: undefined }\r\n\r\n    componentDidMount() {\r\n        const { dispatch } = this.props\r\n        dispatch(fetchContactsData())\r\n    }\r\n\r\n    handleChangeTxt = async (filterBy) => {\r\n        this.props.dispatch(fetchContactsData({ term: filterBy }))\r\n    }\r\n\r\n    deleteContact = (contactId) => {\r\n        const { dispatch } = this.props\r\n        dispatch(deleteContact(contactId))\r\n        // this.props.dispatch(deleteContact(this.props.contactDetails._id))\r\n    }\r\n\r\n    contactSelected = (selectedContact) => {\r\n        console.log(selectedContact);\r\n        this.setState({ selectedContact });\r\n    }\r\n\r\n    addNewContact = () => {\r\n        this.props.history.push('/contact/edit');\r\n    }\r\n\r\n    render() {\r\n        return <div>\r\n            <ContactFilter onFilter={this.handleChangeTxt}></ContactFilter>\r\n            <button style={{ margin: 23 + 'px' }} className=\"waves-effect waves-light btn-small\" onClick={this.addNewContact}>Add new contact</button>\r\n            <ContactList deleteContact={this.deleteContact} contactSelected={this.contactSelected} contacts={this.props.contacts}></ContactList>}\r\n            </div>\r\n    };\r\n}\r\n\r\n\r\nconst mapStateToProps = (state) => {\r\n    const { contacts } = state.contactsReducer;\r\n    return {\r\n        contacts\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps)(ContactPage)","import React from 'react';\nimport './App.css';\nimport AppHeader from './components/AppHeader/AppHeader';\nimport StatisticPage from './pages/StatisticPage';\nimport HomePage from './pages/HomePage'\nimport ContactDetails from './pages/ContactDetails';\nimport ContactEdit from './pages/ContactEdit/ContactEditPage';\nimport SignupPage from './pages/SignupPage';\n\nimport { HashRouter as Router, Route, Switch, Redirect } from \"react-router-dom\";\nimport ContactPage from './pages/ContactPage';\n\nconst PrivateRoute = props => {\n  return props.isAdmin ? <Route {...props} /> : <Redirect to=\"/signup\" />;\n};\n\nclass App extends React.Component {\n\n  render() {\n    return (\n      <div className=\"App\">\n        <Router>\n          <AppHeader></AppHeader>\n          <Switch>\n            <Route exact path=\"/\" component={HomePage} />\n\n            <Route exact path=\"/contact\" component={ContactPage} />\n\n            <Route path=\"/statistics\" component={StatisticPage} />\n\n            <Route path=\"/signup\" component={SignupPage} />\n\n            <PrivateRoute\n              isAdmin={true}\n              path=\"/contact/edit/:id?\"\n              component={ContactEdit}\n            />\n\n            <Route path=\"/contact/:id\" render={({ match }) => (\n              <ContactDetails contactId={match.params.id} />\n            )} />\n\n          </Switch>\n        </Router>\n      </div>\n    );\n  }\n\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","const  types = { \r\n    FETCH_CONTACTS : \"FETCH_CONTACTS\", \r\n    DELETE_CONTACT : 'DELETE_CONTACT',\r\n    GET_CONTACT_ID: 'GET_CONTACT_ID',\r\n    SAVE_CONTACT: 'SAVE_CONTACT',\r\n    GET_BITCOIN_RATE: 'GET_BITCOIN_RATE',\r\n    GET_USER: 'GET_USER',\r\n    TRANSFER_COINS: 'TRANSFER_COINS'\r\n};\r\nexport default types;","import { combineReducers } from 'redux';\r\nimport contactsReducer from './contactsReducer'\r\nimport bitcoinReducer from './bitcoinReducer';\r\nimport userReducer from './userReducer';\r\n\r\nconst combinedReducer = combineReducers({\r\n  contactsReducer,\r\n  bitcoinReducer,\r\n  userReducer\r\n})\r\n\r\nexport default combinedReducer;\r\n","import types from \"../types\";\r\n\r\nexport default function\r\n  contactsReducer(state = { contacts: [], contactDetails: { name: \"\", phone: \"\", email: \"\" } }, action) {\r\n  switch (action.type) {\r\n    case types.FETCH_CONTACTS:\r\n      return { ...state, contacts: action.data };\r\n    case types.DELETE_CONTACT:\r\n      return { ...state, contacts: action.data };\r\n    case types.GET_CONTACT_ID:\r\n      return { ...state, contactDetails: action.data }\r\n    case types.SAVE_CONTACT:\r\n      return { ...state, contactDetails: action.data }\r\n    default:\r\n      return state;\r\n  }\r\n}","import types from \"../types\";\r\n\r\nexport default function\r\n  bitcoinReducer(state = {btc: 0, marketPriceData: null, confirmedTransactionsData: null}, action) {\r\n  switch (action.type) {\r\n    case types.GET_BITCOIN_RATE:\r\n        return { ...state, btc: action.data}\r\n    default:\r\n      return state;\r\n  }\r\n}","export default function\r\n    userReducer(state = { user: {} }, action) {\r\n    switch (action.type) {\r\n        case 'GET_USER':\r\n            return { ...state, user: action.data };\r\n        case 'onTransferCoins':\r\n            return { ...state, user: action.data };\r\n        default:\r\n            return state;\r\n    }\r\n}","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nimport thunk from 'redux-thunk';\nimport { createLogger } from 'redux-logger';\n\nimport { createStore, applyMiddleware } from 'redux';\nimport { Provider } from 'react-redux';\nimport reducer from './store/reducers/';\n\nconst middleware = [thunk]\nif (process.env.NODE_ENV !== 'production') {\n    middleware.push(createLogger())\n}\nconst store = createStore(\n    reducer,\n    applyMiddleware(...middleware)\n)\nReactDOM.render(<Provider store={store}>\n    <App /></Provider>, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}